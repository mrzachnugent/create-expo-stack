import { useHeaderHeight } from '@react-navigation/elements';
import { FlashList } from '@shopify/flash-list';
import { cssInterop } from 'nativewind';
import * as React from 'react';
import { Button as RNButton, ButtonProps, Linking, View, Platform } from 'react-native';

import { Text } from '~/components/nativewind-ui/Text';
import { useColorScheme } from '~/lib/useColorScheme';
import { useHeaderSearchBar } from '~/lib/useHeaderSearchBar';

cssInterop(FlashList, {
  className: 'style',
  contentContainerClassName: 'contentContainerStyle',
});

function DefaultButton({ color, ...props }: ButtonProps) {
  const { colors } = useColorScheme();
  return <RNButton color={color ?? colors.primary} {...props} />;
}

export default function Screen() {
  const searchValue = useHeaderSearchBar();

  const data = searchValue
    ? COMPONENTS.filter((c) => c.name.toLowerCase().includes(searchValue.toLowerCase()))
    : COMPONENTS;

  return (
    <FlashList
      contentInsetAdjustmentBehavior="automatic"
      keyboardShouldPersistTaps="handled"
      data={data}
      estimatedItemSize={200}
      contentContainerClassName="py-4"
      centerContent={data.length === 0}
      extraData={searchValue}
      removeClippedSubviews={false} // used for selecting text on android
      keyExtractor={keyExtractor}
      ItemSeparatorComponent={renderItemSeparator}
      renderItem={renderItem}
      ListEmptyComponent={ListEmptyComponent}
    />
  );
}

const SEARCH_BAR_HEIGHT = 52;

function ListEmptyComponent() {
  const headerHeight = useHeaderHeight();
  return (
    <>
      {Platform.OS === 'ios' && <View style={{ height: headerHeight + SEARCH_BAR_HEIGHT }} />}
      <View className="flex-1 items-center justify-center px-4">
        <Text variant="title3" className="pb-1 text-center font-bold">
          Add Components
        </Text>
        <Text color="tertiary" variant="body" className="pb-4 text-center">
          You can install any of the free components from the NativeWindUI website.
        </Text>
        <DefaultButton
          title="Open NativeWindUI"
          onPress={() => Linking.openURL('https://nativewindui.com')}
        />
      </View>
    </>
  );
}

type ComponentItem = { name: string; component: () => React.JSX.Element };

function keyExtractor(item: ComponentItem) {
  return item.name;
}

function renderItemSeparator() {
  return <View className="p-2" />;
}

function renderItem({ item }: { item: ComponentItem }) {
  return (
    <Card title={item.name}>
      <item.component />
    </Card>
  );
}

function Card({ children, title }: { children: React.ReactNode; title: string }) {
  return (
    <View className="px-4">
      <View className="gap-4 rounded-xl border border-border bg-card p-4 pb-6 shadow-sm shadow-black/10 dark:shadow-none">
        <Text className="text-center text-sm font-medium tracking-wider opacity-60">{title}</Text>
        {children}
      </View>
    </View>
  );
}

const COMPONENTS: ComponentItem[] = [];

